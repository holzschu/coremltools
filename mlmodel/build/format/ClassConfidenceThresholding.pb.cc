// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ClassConfidenceThresholding.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ClassConfidenceThresholding.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace CoreML {
namespace Specification {
class ClassConfidenceThresholdingDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ClassConfidenceThresholding> {
} _ClassConfidenceThresholding_default_instance_;

namespace protobuf_ClassConfidenceThresholding_2eproto {

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
};


void TableStruct::Shutdown() {
  _ClassConfidenceThresholding_default_instance_.Shutdown();
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults();
  _ClassConfidenceThresholding_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  ::CoreML::Specification::protobuf_DataStructures_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER

}  // namespace protobuf_ClassConfidenceThresholding_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClassConfidenceThresholding::kPrecisionRecallCurvesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClassConfidenceThresholding::ClassConfidenceThresholding()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ClassConfidenceThresholding_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CoreML.Specification.ClassConfidenceThresholding)
}
ClassConfidenceThresholding::ClassConfidenceThresholding(const ClassConfidenceThresholding& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      precisionrecallcurves_(from.precisionrecallcurves_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CoreML.Specification.ClassConfidenceThresholding)
}

void ClassConfidenceThresholding::SharedCtor() {
  _cached_size_ = 0;
}

ClassConfidenceThresholding::~ClassConfidenceThresholding() {
  // @@protoc_insertion_point(destructor:CoreML.Specification.ClassConfidenceThresholding)
  SharedDtor();
}

void ClassConfidenceThresholding::SharedDtor() {
}

void ClassConfidenceThresholding::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ClassConfidenceThresholding& ClassConfidenceThresholding::default_instance() {
  protobuf_ClassConfidenceThresholding_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClassConfidenceThresholding* ClassConfidenceThresholding::New(::google::protobuf::Arena* arena) const {
  ClassConfidenceThresholding* n = new ClassConfidenceThresholding;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClassConfidenceThresholding::Clear() {
// @@protoc_insertion_point(message_clear_start:CoreML.Specification.ClassConfidenceThresholding)
  precisionrecallcurves_.Clear();
}

bool ClassConfidenceThresholding::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CoreML.Specification.ClassConfidenceThresholding)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CoreML.Specification.PrecisionRecallCurve precisionRecallCurves = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(802u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_precisionrecallcurves()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CoreML.Specification.ClassConfidenceThresholding)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CoreML.Specification.ClassConfidenceThresholding)
  return false;
#undef DO_
}

void ClassConfidenceThresholding::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CoreML.Specification.ClassConfidenceThresholding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CoreML.Specification.PrecisionRecallCurve precisionRecallCurves = 100;
  for (unsigned int i = 0, n = this->precisionrecallcurves_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      100, this->precisionrecallcurves(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CoreML.Specification.ClassConfidenceThresholding)
}

size_t ClassConfidenceThresholding::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CoreML.Specification.ClassConfidenceThresholding)
  size_t total_size = 0;

  // repeated .CoreML.Specification.PrecisionRecallCurve precisionRecallCurves = 100;
  {
    unsigned int count = this->precisionrecallcurves_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->precisionrecallcurves(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClassConfidenceThresholding::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ClassConfidenceThresholding*>(&from));
}

void ClassConfidenceThresholding::MergeFrom(const ClassConfidenceThresholding& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CoreML.Specification.ClassConfidenceThresholding)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  precisionrecallcurves_.MergeFrom(from.precisionrecallcurves_);
}

void ClassConfidenceThresholding::CopyFrom(const ClassConfidenceThresholding& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CoreML.Specification.ClassConfidenceThresholding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClassConfidenceThresholding::IsInitialized() const {
  return true;
}

void ClassConfidenceThresholding::Swap(ClassConfidenceThresholding* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClassConfidenceThresholding::InternalSwap(ClassConfidenceThresholding* other) {
  precisionrecallcurves_.InternalSwap(&other->precisionrecallcurves_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string ClassConfidenceThresholding::GetTypeName() const {
  return "CoreML.Specification.ClassConfidenceThresholding";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClassConfidenceThresholding

// repeated .CoreML.Specification.PrecisionRecallCurve precisionRecallCurves = 100;
int ClassConfidenceThresholding::precisionrecallcurves_size() const {
  return precisionrecallcurves_.size();
}
void ClassConfidenceThresholding::clear_precisionrecallcurves() {
  precisionrecallcurves_.Clear();
}
const ::CoreML::Specification::PrecisionRecallCurve& ClassConfidenceThresholding::precisionrecallcurves(int index) const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.ClassConfidenceThresholding.precisionRecallCurves)
  return precisionrecallcurves_.Get(index);
}
::CoreML::Specification::PrecisionRecallCurve* ClassConfidenceThresholding::mutable_precisionrecallcurves(int index) {
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.ClassConfidenceThresholding.precisionRecallCurves)
  return precisionrecallcurves_.Mutable(index);
}
::CoreML::Specification::PrecisionRecallCurve* ClassConfidenceThresholding::add_precisionrecallcurves() {
  // @@protoc_insertion_point(field_add:CoreML.Specification.ClassConfidenceThresholding.precisionRecallCurves)
  return precisionrecallcurves_.Add();
}
::google::protobuf::RepeatedPtrField< ::CoreML::Specification::PrecisionRecallCurve >*
ClassConfidenceThresholding::mutable_precisionrecallcurves() {
  // @@protoc_insertion_point(field_mutable_list:CoreML.Specification.ClassConfidenceThresholding.precisionRecallCurves)
  return &precisionrecallcurves_;
}
const ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::PrecisionRecallCurve >&
ClassConfidenceThresholding::precisionrecallcurves() const {
  // @@protoc_insertion_point(field_list:CoreML.Specification.ClassConfidenceThresholding.precisionRecallCurves)
  return precisionrecallcurves_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Specification
}  // namespace CoreML

// @@protoc_insertion_point(global_scope)
